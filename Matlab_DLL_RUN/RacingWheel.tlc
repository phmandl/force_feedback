%% File : RacingWheel.tlc
%% Created : Thu Jun 11 22:11:09 2020
%%
%% Description: 
%%   Simulink Coder wrapper functions interface generated for 
%%   S-function "RacingWheel.cpp".
%%
%%         File generated by S-function Builder Block
%%
%%   For more information on using the Target Language with the 
%%   Simulink Coder, see the Target Language Compiler manual
%%   (under Simulink Coder) in the "Inlining S-Functions"
%%   chapter under the section and subsection:
%%     "Writing Block Target Files to Inline S-Functions",
%%        "Function-Based or Wrappered Code".
%%
%implements  RacingWheel "C"
%% Function: BlockTypeSetup ===================================================
%%
%% Purpose:
%%      Set up external references for wrapper functions in the 
%%      generated code.
%%
%function BlockTypeSetup(block, system) Output
  %openfile externs


    extern void RacingWheel_Start_wrapper(const int32_T *Ts_FF, const int_T p_width0);

    extern void RacingWheel_Outputs_wrapper(real_T *y0,
			const int32_T *Ts_FF, const int_T p_width0);

    extern void RacingWheel_Terminate_wrapper(const int32_T *Ts_FF, const int_T p_width0);

  %closefile externs
  %<LibCacheExtern(externs)>
  %%
%endfunction


%% Function: Start ============================================================
%%
%function Start(block, system) Output
   /* %<Type> Block: %<Name> */
  %assign nelements1 = LibBlockParameterSize(P1)
  %assign param_width1 = nelements1[0] * nelements1[1]
  %if (param_width1) > 1
    %assign pp1 = LibBlockMatrixParameterBaseAddr(P1)
  %else
    %assign pp1 = LibBlockParameterAddr(P1, "", "", 0)
  %endif
  RacingWheel_Start_wrapper(%<pp1>, %<param_width1>);
%endfunction
%% Function: Outputs ==========================================================
%%
%% Purpose:
%%      Code generation rules for mdlOutputs function.
%%
%function Outputs(block, system) Output
  %%
  %assign py0 = LibBlockOutputSignalAddr(0, "", "", 0)
  %assign nelements1 = LibBlockParameterSize(P1)
  %assign param_width1 = nelements1[0] * nelements1[1]
  %if (param_width1) > 1
    %assign pp1 = LibBlockMatrixParameterBaseAddr(P1)
  %else
    %assign pp1 = LibBlockParameterAddr(P1, "", "", 0)
  %endif
  RacingWheel_Outputs_wrapper(%<py0>, %<pp1>, %<param_width1>);
  %%
%endfunction


%% [EOF] RacingWheel.tlc

